// <auto-generated />
using ED.Infra.Data.EntityConfiguration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ED.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Author", b =>
                {
                    b.Property<int>("CodAuthor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodCategory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CodAuthor");

                    b.HasIndex("CodCategory");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Category", b =>
                {
                    b.Property<int>("CodCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CodCategory");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Gender", b =>
                {
                    b.Property<int>("CodGender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CodGender");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Music", b =>
                {
                    b.Property<int>("CodMusic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodAuthor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CodGender")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("CodMusic");

                    b.HasIndex("CodAuthor");

                    b.HasIndex("CodGender");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Author", b =>
                {
                    b.HasOne("ED.Domain.Model.Models.Entities.Category", "Category")
                        .WithMany("Authors")
                        .HasForeignKey("CodCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Music", b =>
                {
                    b.HasOne("ED.Domain.Model.Models.Entities.Author", "Author")
                        .WithMany("Musics")
                        .HasForeignKey("CodAuthor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ED.Domain.Model.Models.Entities.Gender", "Gender")
                        .WithMany("Musics")
                        .HasForeignKey("CodGender")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Author", b =>
                {
                    b.Navigation("Musics");
                });

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Category", b =>
                {
                    b.Navigation("Authors");
                });

            modelBuilder.Entity("ED.Domain.Model.Models.Entities.Gender", b =>
                {
                    b.Navigation("Musics");
                });
#pragma warning restore 612, 618
        }
    }
}
